-- Q1 Are there any data quality issues present?
-- Users table:
-- check for missing fields:
select count(*) as missing_birth_date 
from users
where birth_date is null or birth_date='';
select count(*) as missing_state
from users
where state is null or state='';
select count(*) as missing_language
from users
where language is null or language='';
select count(*) as missing_gender
from users
where gender is null or gender='';
-- The queries above identify if and how many null values are present in the table.

-- check for inconsistent values:
select distinct language
from users;
select distinct gender
from users;
-- The queries above identify how many unique values are possible for each field to pull from the table, shed light onto any inconsistencies in the number of characters and formatting of the field values, and also identify if there are missing or null values in the data.

Transaction table:
there are duplicatie rows of data across all fields except final_quantity and final_sale - Is this done intentionally or do the final_quantity and final_sale fields need to be adjusted in some way?
purchase date and scan date are not in the same datetimestamp format
store name - inconsistencies with nomenclature - lots of mispellings
barcode - inconsistently missing some values
final_quantity - inconsistency with the data type/field format zero vs 1
final_sale - some values are missing, the decimla placement is inconsistent - some are 1 decimal, 2 or none
Products table:
all fields have inconsistencies with missing values
barcode - since this is the unique identifier used to connect the transaction table, with the missing values, it is impossible to connect some records to the otehr table

-- Q2 Are there any fields that are challenging to understand?
Yes - The final_quantity and final_sale fields of the transaction table - rows are duplicative on the rows of data except these but it is unclear as to why and if it is intentional or a bug
Yes - If the Entity Relationship Model was not provided, it might be dificult to conclude that id in the users table was the same field as user_id in the transactions table 

-- Q3 What are the top 5 brands by receipts scanned among users 21 and over?
select p.brand, count(distinct t.receipt_id) as receipts_scanned
from trantactions t 
-- join with the products table on the the shared barcode field
left join products p on t.barcode = p.barcode
-- join with the users table on the shared id field
left join users u on t.user_id=u.id
-- filtering results to isolate users who are 21 years of age or older
where u.birth_date <= current_date - interval '21 years'
-- grouping results by brand
group by 1
-- sorting results by the most receipts to the least receipts
order by 2 desc
-- cutting off results at 5 top rows
limit 5;

-- OR a window function can be used to pull these results:
select brand_rank, brand, receipts_scanned
from
-- subquery to pull ranking of brands by quantity of receipts
(select p.brand, count(distinct t.receipt_id) as receipts_scanned, rank() over (order by count(distinct t.receipt_id) desc) as brand_rank
from trantactions t 
-- join with the products table on the the shared barcode field
left join products p on t.barcode = p.barcode
-- join with the users table on the shared id field
left join users u on t.user_id=u.id
-- filtering results to isolate users who are 21 years of age or older
where u.birth_date <= current_date - interval '21 years'
-- grouping results by brand
group by 1) ranked_brands
-- filter subquery results to only include the top 5 ranked brands in ascending order
where brand_rank <=5
order by 1 asc;

---Q4 What are the top 5 brands by sales among users that have had their account for at least six months?
select distinct on t.receipt_id, t.receipt_id, p.brand, max(case when t.final_sale is not null and <> '' then t.final_sale::numeric else null end) as final_complete_sale
from trantactions t 
-- join with the products table on the the shared barcode field
left join products p on t.barcode = p.barcode
-- join with the users table on the shared id field
left join users u on t.user_id=u.id
-- filtering results to isolate users who created an account at least 6 months ago
where u.created_date <= current_date - interval '6 months'
-- grouping results by brands
group by 1, 2
-- sorting results by the most sales to the least sales
order by 1, 3 desc
-- cutting of results at 5 top rows
limit 5;

---Q5 What is the percentage of sales in the Health & Wellness category by generation?
select generation, category_1, sum(final_sale) over (partition by 
from trantactions t 
left join products p on t.barcode = p.barcode
left join users u on t.user_id=u.id
group by 1

